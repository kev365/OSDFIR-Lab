# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
=======
# OS artifacts
.DS_Store
Thumbs.db
desktop.ini
*.ps1.bak
*.tmp
*.temp
~*
*.bak
*.backup

# Project folders
.cursor
.taskmaster
backups
scripts/dev
commands.md

# Terraform
**/.terraform/
*.tfstate
*.tfstate.*
*.tfvars
*.tfplan
.terraform.lock.hcl

# Kubernetes
kubeconfig
.kube/

# Helm
charts/*.tgz
.helm/

# Docker
.docker/

# AI model cache (if downloaded locally)
models/
*.gguf

# Jupyter notebooks checkpoints
.ipynb_checkpoints/

# Python cache (if any Python tools are added)
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
pip-log.txt

# Node modules (if any frontend tools are added)
node_modules/
npm-debug.log 

# Generated Timesketch config tarball
configs/init-timesketch/ts-configs.tar.gz
